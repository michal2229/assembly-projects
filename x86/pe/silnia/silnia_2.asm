; PROGRAM LICZACY SILNIE Z LICZBY OD 0 DO 12
; PROGRAM PRZEZNACZONY DO EDYTORA FASM

FORMAT PE CONSOLE    ;TYP PROGRAMU TO PE CONSOLE
ENTRY POCZATEK		 ;PUNKT WEJSCIOWY PROGRAMU

; SEKCJA KODU

SECTION '.TEXT' CODE READABLE EXECUTABLE

POCZATEK:

PUSH WITAJ 
CALL [PRINTF] ; WYSWIETLENIE KOMUNIKATU POWITALNEGO

JESZCZE_RAZ:

PUSH PODAJ_LICZBE
CALL [PRINTF]; WYSWIETLENIE PROSBY PODANIA LICZBY

PUSH LICZB    ; WRZUCAM NA STOS ADRES KOMORKI DOCELOWEJ WPISANIA LICZBY
PUSH INTEGER ; WRZUCAM FORMAT LICZBY INTEGER
CALL [SCANF]	; ODCZYTUJE LICZBE I ZAPISUJE DO PAMIECI

MOV EBX, [LICZB] ; PRZENOSZE LICZBE DO EBX

CMP EBX, 12 ; POROWNUJE Z 12 (JESLI JEST WIEKSZA NIZ 12 TO WYNIK SILNI NIE ZMIESCI SIE NA 32 BITACH)
JG JESZCZE_RAZ

CMP EBX, 0 ; POROWNUJE WARTOSC Z ZEREM (JESLI MNIEJSZA TO JESZCZE RAZ)
JL JESZCZE_RAZ

; WYNIK W BX
	MOV ECX, 0
	MOV ECX, EBX
	MOV EAX, 1
	MOV EBX, 1
	CMP ECX, 2
	JL DALEJ ; JESLI LICZBA MNIEJSZA NIZ 2 TO WYNIK = 1

SILNIA: ; PETLA DOLICZENIA SILNI
	MOV EDX, 0
	MUL EBX ; MNOZE PRZEZ KOLEJNE LICZBY (2,3,4,...)
	INC EBX ; ZWIEKSZAM LICZBE, PRZEZ KTORA MNOZE O JEDEN
	LOOP SILNIA

DALEJ:

; WYNIK W AX
PUSH EAX ; PRZENOSZE 
PUSH WYNIK
CALL [PRINTF] ; WYSWIETLAM WYNIK

	PUSH	PAUZA
	CALL	[SYSTEM]

	CALL	[EXIT]


; SEKCJA DANYCH


SECTION '.DATA' DATA READABLE WRITEABLE


	PAUZA	   DB "PAUSE",0   ; KOMENDA CMD, CZEKA NA KLAWISZ
	WYJDZ	   DB "EXIT 0",0  ; KOMENDA CMD, WYCHODZI Z PROGRAMU Z KODEM 0 (BEZ BLEDU)

	INTEGER DB '%I',0
	LICZB RD 1

	WITAJ DB " WITAJ. TEN PROGRAM SLUZY DO OBLICZANIA SILNI.",13,10
		DB " NALEZY WPROWADZIC LICZBE, Z KTOREJ CHCEMY OTRZYMAC SILNIE (0-12).",13,10
		DB " PO WPROWADZENIU NIEPOPRAWNEJ WARTOSCI WPROWADZANIE ZOSTANIE PONOWIONE.",0

	PODAJ_LICZBE DB 13,10,13,10," Z JAKIEJ LICZBY CHCESZ POLICZYC SILNIE? (0-12): ",0

	WYNIK DB 13,10, " SILNIA TEJ LICZBY WYNOSI %I",13,10,0

; SEKCJA DANYCH IMPORTOWANYCH

SECTION '.IDATA' IMPORT DATA READABLE WRITEABLE

	; IMAGE_IMPORT_DESCRIPTOR
	DD 0, 0, 0, RVA MSVCRT_NAME, RVA MSVCRT_TABLE
	DD 0, 0, 0, 0, 0  ; THE END WITH ZERO-FILL

	; FIRSTTHUNK
	MSVCRT_TABLE:
		  SCANF        DD RVA _SCANF
		  PRINTF       DD RVA _PRINTF
		  EXIT	       DD RVA _EXIT
		  SYSTEM       DD RVA _SYSTEM
			       DD 0	 ; THE END WITH ZERO-FILL

	; LIBRARY NAME
	MSVCRT_NAME	     DB 'MSVCRT.DLL', 0
	; IMAGE_IMPORT_BY_NAME
		  _PRINTF    DW 0		;HINT
			     DB  'PRINTF', 0   ;NAME
		  _SCANF     DW 0
			     DB  'SCANF',  0
		  _EXIT      DW 0
			     DB  'EXIT',   0
		  _SYSTEM    DW 0
			     DB  'SYSTEM', 0

